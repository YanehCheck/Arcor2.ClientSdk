/*
 * ARCOR2 ARServer Data Models
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;

namespace Arcor2.ClientSdk.Communication.OpenApi.Models
{
    /// <summary>
    /// Args(camera_parameters: arcor2.data.camera.CameraParameters, image: str)
    /// </summary>
    [DataContract(Name = "MarkersCornersRequestArgs")]
    public partial class MarkersCornersRequestArgs : IEquatable<MarkersCornersRequestArgs>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MarkersCornersRequestArgs" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected MarkersCornersRequestArgs() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="MarkersCornersRequestArgs" /> class.
        /// </summary>
        /// <param name="cameraParameters">cameraParameters (required).</param>
        /// <param name="image">Base64 encoded image. (required).</param>
        public MarkersCornersRequestArgs(CameraParameters cameraParameters = default(CameraParameters), string image = default(string))
        {
            // to ensure "cameraParameters" is required (not null)
            if (cameraParameters == null)
            {
                throw new ArgumentNullException("cameraParameters is a required property for MarkersCornersRequestArgs and cannot be null");
            }
            this.CameraParameters = cameraParameters;
            // to ensure "image" is required (not null)
            if (image == null)
            {
                throw new ArgumentNullException("image is a required property for MarkersCornersRequestArgs and cannot be null");
            }
            this.Image = image;
        }

        /// <summary>
        /// Gets or Sets CameraParameters
        /// </summary>
        [DataMember(Name = "camera_parameters", IsRequired = true, EmitDefaultValue = true)]
        public CameraParameters CameraParameters { get; set; }

        /// <summary>
        /// Base64 encoded image.
        /// </summary>
        /// <value>Base64 encoded image.</value>
        [DataMember(Name = "image", IsRequired = true, EmitDefaultValue = true)]
        public string Image { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MarkersCornersRequestArgs {\n");
            sb.Append("  CameraParameters: ").Append(CameraParameters).Append("\n");
            sb.Append("  Image: ").Append(Image).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MarkersCornersRequestArgs);
        }

        /// <summary>
        /// Returns true if MarkersCornersRequestArgs instances are equal
        /// </summary>
        /// <param name="input">Instance of MarkersCornersRequestArgs to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MarkersCornersRequestArgs input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CameraParameters == input.CameraParameters ||
                    (this.CameraParameters != null &&
                    this.CameraParameters.Equals(input.CameraParameters))
                ) && 
                (
                    this.Image == input.Image ||
                    (this.Image != null &&
                    this.Image.Equals(input.Image))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CameraParameters != null)
                {
                    hashCode = (hashCode * 59) + this.CameraParameters.GetHashCode();
                }
                if (this.Image != null)
                {
                    hashCode = (hashCode * 59) + this.Image.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
