/*
 * ARCOR2 ARServer Data Models
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Arcor2.ClientSdk.Communication.OpenApi.Models
{
    /// <summary>
    /// Args(action_id: str, parameters: Optional[list[arcor2.data.common.ActionParameter]] &#x3D; None, flows: Optional[list[arcor2.data.common.Flow]] &#x3D; None)
    /// </summary>
    [DataContract(Name = "UpdateActionRequestArgs")]
    public partial class UpdateActionRequestArgs : IEquatable<UpdateActionRequestArgs>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateActionRequestArgs" /> class.
        /// </summary>
        [JsonConstructor]
        protected UpdateActionRequestArgs() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateActionRequestArgs" /> class.
        /// </summary>
        /// <param name="actionId">actionId (required).</param>
        /// <param name="parameters">parameters.</param>
        /// <param name="flows">flows.</param>
        public UpdateActionRequestArgs(string actionId = default(string), List<ActionParameter> parameters = default(List<ActionParameter>), List<Flow> flows = default(List<Flow>))
        {
            // to ensure "actionId" is required (not null)
            if (actionId == null)
            {
                throw new ArgumentNullException("actionId is a required property for UpdateActionRequestArgs and cannot be null");
            }
            this.ActionId = actionId;
            this.Parameters = parameters;
            this.Flows = flows;
        }

        /// <summary>
        /// Gets or Sets ActionId
        /// </summary>
        [DataMember(Name = "action_id", IsRequired = true, EmitDefaultValue = true)]
        public string ActionId { get; set; }

        /// <summary>
        /// Gets or Sets Parameters
        /// </summary>
        [DataMember(Name = "parameters", EmitDefaultValue = false)]
        public List<ActionParameter> Parameters { get; set; }

        /// <summary>
        /// Gets or Sets Flows
        /// </summary>
        [DataMember(Name = "flows", EmitDefaultValue = false)]
        public List<Flow> Flows { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateActionRequestArgs {\n");
            sb.Append("  ActionId: ").Append(ActionId).Append("\n");
            sb.Append("  Parameters: ").Append(Parameters).Append("\n");
            sb.Append("  Flows: ").Append(Flows).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UpdateActionRequestArgs);
        }

        /// <summary>
        /// Returns true if UpdateActionRequestArgs instances are equal
        /// </summary>
        /// <param name="input">Instance of UpdateActionRequestArgs to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpdateActionRequestArgs input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ActionId == input.ActionId ||
                    (this.ActionId != null &&
                    this.ActionId.Equals(input.ActionId))
                ) && 
                (
                    this.Parameters == input.Parameters ||
                    this.Parameters != null &&
                    input.Parameters != null &&
                    this.Parameters.SequenceEqual(input.Parameters)
                ) && 
                (
                    this.Flows == input.Flows ||
                    this.Flows != null &&
                    input.Flows != null &&
                    this.Flows.SequenceEqual(input.Flows)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ActionId != null)
                {
                    hashCode = (hashCode * 59) + this.ActionId.GetHashCode();
                }
                if (this.Parameters != null)
                {
                    hashCode = (hashCode * 59) + this.Parameters.GetHashCode();
                }
                if (this.Flows != null)
                {
                    hashCode = (hashCode * 59) + this.Flows.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
